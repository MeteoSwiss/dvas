
# ----------------------------------------------------
# RS-92 type for pseudo data (NOT THE GDP!)
# ----------------------------------------------------
_RS92:

    # -- META DATA ----------------------------------
    edt: "get('event_dt')"
    srn: "get('sn')"
    pid: "get('product_id')"
    tags:
        - "cat('e:', get('event_id'))"
        - "cat('r:', get('rig'))"
        - "get('day_night')"

    # -- ORIG DATA ----------------------------------
    csv_delimiter: ','
    csv_skipinitialspace: True

    _time:
        value: get(0, 's2ns')

    _temp:
        value: get(2)

    _gph:
        value: get(9)

    _pres:
        value: get(1)

# ----------------------------------------------------
# YT type
# ----------------------------------------------------
_YT:

    # -- META DATA ----------------------------------
    edt: "cat(get('event_dt'), 'Z')"
    srn: "get('sn')"
    pid: "get('product_id')"
    tags:
        - "cat('e:', get('event_id'))"
        - "cat('r:', get('rig'))"
        - "get('day_night')"

    # -- ORIG DATA ----------------------------------
    csv_delimiter: ','
    csv_skipinitialspace: True

    _time:
        value: get(0, 's2ns')

    _temp:
        value: get(1)

    _gph:
        value: get(2)

    _pres:
        value: get(3)

    _temp_flag:
        value: get(0)
        csv_use_default: True


# ----------------------------------------------------
# ZT type
# ----------------------------------------------------
_ZT:

    # -- META DATA ----------------------------------
    edt: "get('event_dt')"
    srn: "get('sn')"
    pid: "get('product_id')"
    tags:
        - "cat('e:', get('event_id'))"
        - "cat('r:', get('rig'))"
        - "get('day_night')"

    # -- ORIG DATA ----------------------------------
    csv_delimiter: ';'
    csv_skip_blank_lines: True

    _time:
        value: get(0, 's2ns')

    _temp:
        value: get(1)

    _gph:
        value: get(2)

    _pres:
        value: get(3)

    _temp_flag:
        value: get(0)
        csv_use_default: True
