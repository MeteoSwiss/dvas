# Copyright (c) 2020-2022 MeteoSwiss, contributors listed in AUTHORS.
#
# Distributed under the terms of the GNU General Public License v3.0 or later.
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# This file contains the extraction details for iMS-100 GDP and MDP files.
# It must absolutely have the string 'origdata' in its name, to match the dvas class names.
# --------------------------------------------------------------------------------------------------

# ----------------------------------------------------
# iMS-100 MDP (UAII2022 format)
# ----------------------------------------------------

_iMS100:

    # -- META DATA ----------------------------------
    edt: "to_datetime(get('event_dt'))"
    srn: "get('srn')"
    pid: "get('product_id')"
    tags:
        - "cat('e:', get('event_id'))"
        - "cat('r:', get('rig_id'))"
    metadata:
        first_timestamp: "to_datetime(get('first_timestamp'))"
        launch_timestamp: "to_datetime(get('launch_timestamp'))"
        burst_timestamp: "to_datetime(get('burst_timestamp'))"

    # -- ORIG DATA ----------------------------------
    csv_delimiter: ';'
    csv_skip_blank_lines: False
    csv_delim_whitespace: False
    csv_skiprows: 19
    csv_skipfooter: 0
    csv_encoding:
    csv_na_values: 'NaN'
    csv_header: 0

    _time:
        value: getreldt('time_stamp', '%Y-%m-%dT%H:%M:%S.%fZ')

    _alt_ref:
        value: get('gph_gnss')

    _gph:
        value: get('gph_gnss')

    _temp:
        value: get('temp', 'c2k')

    _pres:
        value: get('press_gnss')

    _rh:
        value: get('rh')

    _wdir:
        value: get('wind_dir')

    _wspeed:
        value: get('wind_speed')

# ----------------------------------------------------
# iMS-100 GDP, beta version 2
# ----------------------------------------------------
_IMS-100-BETA_002:

    # -- META DATA ----------------------------------
    edt: "to_datetime(get('g.Measurement.StandardTime'))"
    srn: "get('g.MainSonde.SerialNumber')"
    pid: "get('g.Product.Id')"
    tags:
        - "cat('e:', get('g.Measurement.Id'))"
        - "cat('r:', get('g.Measurement.BalloonNumber', totype=str))"
    metadata:
        first_timestep: "to_datetime(get('g.Measurement.StartTime'))"
        launch_timestep: "to_datetime(get('g.Measurement.StartTime'))"
        burst_timestep: "to_datetime(get('g.Measurement.BurstpointDatetime'))"
        gruan_tropopause: "get('g.Measurement.TropopauseGeopotHeight')"

    # -- ORIG DATA ----------------------------------
    _time:
        value: get('time')

    _alt_ref:
        value: get('alt_gph')

    _gph:
        value: get('alt_gph')
    _gph_uct:
        value: get('alt_gph_uc_cor')
    _gph_ucu:
        value: get('alt_gph_uc_ucor')

    _temp:
        value: get('temp')
    _temp_ucr:
        value: get('temp_uc_ucor')
    _temp_uct:
        value: get('temp_uc_cor')

    _pres:
        value: get('press')
    _pres_uct:
        value: get('press_uc_cor')
    _pres_ucu:
        value: get('press_uc_ucor')

    _rh:
        value: get('rh')
    _rh_ucr:
        value: get('rh_uc_ucor')
    _rh_uct:
        value: get('rh_uc_cor')

    _wdir:
        value: get('wdir')
    _wdir_ucu:
        value: get('wdir_uc_ucor')

    _wspeed:
        value: get('wspeed')
    _wspeed_ucu:
        value: get('wspeed_uc_ucor')
